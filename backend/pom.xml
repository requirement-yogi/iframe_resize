<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.4</version>
        <relativePath /> <!-- lookup parent from repository -->
    </parent>

    <organization>
        <name>Requirement Yogi</name>
        <url>https://www.requirementyogi.com/</url>
    </organization>

    <groupId>com.requirementyogi.cloud</groupId>
    <artifactId>parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Requirement Yogi</name>
    <description>Requirement Yogi</description>

    <properties>
        <!-- Java -->
        <java.version>21</java.version>

        <!-- Dependencies -->
        <atlassian-connect-spring-boot.version>5.1.3</atlassian-connect-spring-boot.version>
        <mapstruct.version>1.6.2</mapstruct.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
        <springdoc-openapi.version>2.6.0</springdoc-openapi.version>

        <!-- Plugins -->
        <license-maven-plugin.version>2.4.0</license-maven-plugin.version>
        <dependency-check-plugin.version>10.0.4</dependency-check-plugin.version>
        <springdoc-openapi-maven-plugin.version>1.4</springdoc-openapi-maven-plugin.version>
        <openapi-generator-maven-plugin.version>7.8.0</openapi-generator-maven-plugin.version>
    </properties>

    <modules>
        <module>common</module>
        <module>confluence-app</module>
    </modules>

    <!-- Shared dependency versions -->
    <dependencyManagement>
        <dependencies>
            <!-- Atlassian Connect - Spring Boot -->
            <dependency>
                <groupId>com.atlassian.connect</groupId>
                <artifactId>atlassian-connect-spring-boot-starter</artifactId>
                <version>${atlassian-connect-spring-boot.version}</version>
            </dependency>

            <!-- Atlassian Connect - Spring Data JPA -->
            <dependency>
                <groupId>com.atlassian.connect</groupId>
                <artifactId>atlassian-connect-spring-boot-jpa-starter</artifactId>
                <version>${atlassian-connect-spring-boot.version}</version>
                <exclusions>
                    <!-- Exclude Liquibase (we use Flyway instead) -->
                    <exclusion>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- MapStruct -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <!-- SpringDoc OpenAPI -->
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc-openapi.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <!-- Shared plugin versions -->
        <pluginManagement>
            <plugins>
                <!-- SpringDoc OpenAPI plugin -->
                <plugin>
                    <groupId>org.springdoc</groupId>
                    <artifactId>springdoc-openapi-maven-plugin</artifactId>
                    <version>${springdoc-openapi-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.openapitools</groupId>
                    <artifactId>openapi-generator-maven-plugin</artifactId>
                    <version>${openapi-generator-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <!-- Enforce the minimum Java version -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-java</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <!-- Download all licenses -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <version>${license-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>download-licenses</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>download-licenses</goal>
                                </goals>
                                <configuration>
                                    <!-- We only want a summary of the licenses of our dependencies -->
                                    <!-- For this reason, we place the license files outside the generated resources -->
                                    <licensesOutputDirectory>
                                        ${project.build.directory}/licenses
                                    </licensesOutputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Include generated resources in the final package -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/generated-resources</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>vulnerabilities</id>
            <properties>
                <skipTests>true</skipTests>
            </properties>
            <build>
                <plugins>
                    <!-- Detect publicly disclosed vulnerabilities -->
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <version>${dependency-check-plugin.version}</version>
                        <configuration>
                            <failBuildOnCVSS>6.9</failBuildOnCVSS>
                            <nvdApiServerId>nvd</nvdApiServerId>
                            <nvdValidForHours>24</nvdValidForHours>
                            <nvdApiDelay>6000</nvdApiDelay>
                            <suppressionFile>vulnerability-suppressions.xml</suppressionFile>
                        </configuration>
                        <executions>
                            <execution>
                                <id>vulnerability-check</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>aggregate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Check for dependency updates -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>versions-maven-plugin</artifactId>
                        <version>${versions-maven-plugin.version}</version>
                        <configuration>
                            <processDependencyManagement>false</processDependencyManagement>
                            <processDependencyManagementTransitive>false</processDependencyManagementTransitive>
                        </configuration>
                        <executions>
                            <execution>
                                <id>dependency-check</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>property-updates-report</goal>
                                    <goal>dependency-updates-report</goal>
                                    <goal>plugin-updates-report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
